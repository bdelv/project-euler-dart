/*
Even Fibonacci numbers
https://projecteuler.net/problem=2

Each new term in the Fibonacci sequence is generated by adding the previous two terms.
By starting with 1 and 2, the first 10 terms will be:
1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...
By considering the terms in the Fibonacci sequence whose values do not exceed four million,
find the sum of the even-valued terms.
*/

import 'dart:core';

const int maxFibonacciNumber = 4000000;
const bool showDebug = false;

int solve(int maxFibonacciNumber) {
  int fibonacci = 2;
  int prev1 = 1;
  int prev2 = 0;
  int sum = 2;

  while (true) {
    prev2 = prev1;
    prev1 = fibonacci;
    fibonacci = prev1 + prev2;
    if (showDebug) print(fibonacci);
    if (fibonacci > maxFibonacciNumber) break;
    if (fibonacci.isEven) sum += fibonacci;
  }
  return sum;
}

void main() {
  assert(solve(100) == 44);

  DateTime creationTime = new DateTime.now();
  int result = solve(maxFibonacciNumber);
  print('Sum of the even Fibonacci numbers <=$maxFibonacciNumber = $result');
  DateTime finishTime = new DateTime.now();
  print('Elapsed time: ${finishTime.difference(creationTime)}');
}
