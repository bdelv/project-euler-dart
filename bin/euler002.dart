/*
Even Fibonacci numbers
https://projecteuler.net/problem=2

Each new term in the Fibonacci sequence is generated by adding the previous two terms.
By starting with 1 and 2, the first 10 terms will be:
1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...
By considering the terms in the Fibonacci sequence whose values do not exceed four million,
find the sum of the even-valued terms.
*/

import 'dart:core';

const int MAX_FIBONB = 4000000;
const bool DEBUG_MODE = false;

int Solve(int MaxFibo) {

  int Prev1 = 0;
  int Prev2 = 0;
  int Fibo= 0;
  int Sum = 0;

  int i=1;
  while (true) {
    Prev2 = Prev1;
    Prev1 = Fibo;
    if (i == 1) Fibo = 1; else if (i == 2) Fibo = 2; else (Fibo = Prev1 + Prev2);
    if (DEBUG_MODE) print(Fibo);
    if (Fibo > MaxFibo) break;
    if (Fibo % 2 == 0) Sum += Fibo;
    i++;
  }
  return Sum;
}

void main() {
  assert(Solve(100) == 44);

  DateTime creationTime = new DateTime.now();
  int res = Solve(MAX_FIBONB);
  print('Sum of the even Fibonacci numbers <=$MAX_FIBONB = $res');
  DateTime finishTime = new DateTime.now();
  print('Elapsed time: ${finishTime.difference(creationTime)}');

}