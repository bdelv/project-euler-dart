/*
	Highly divisible triangular number
	https://projecteuler.net/problem=12

The sequence of triangle numbers is generated by adding the natural numbers.
So the 7th triangle number would be 1 + 2 + 3 + 4 + 5 + 6 + 7 = 28.
The first ten terms would be:
1, 3, 6, 10, 15, 21, 28, 36, 45, 55, ...

Let us list the factors of the first seven triangle numbers:
     1: 1
     3: 1,3
     6: 1,2,3,6
    10: 1,2,5,10
    15: 1,3,5,15
    21: 1,3,7,21
    28: 1,2,4,7,14,28

We can see that 28 is the first triangle number to have over five divisors.
What is the value of the first triangle number to have over five hundred divisors?
*/

import 'dart:core';
import 'dart:math' as math;

const int NB_DIVISORS = 500;
const bool DEBUG_MODE = true;

int Solve(int NB_DIVISORS) {
  int MaxDivisors = 0;

  int TriangleNumber = 0;
  for (int i = 1;; i++) {
    TriangleNumber += i;

    int NbDivisors = 0;
    int limit=math.sqrt(TriangleNumber).floor();
    for (int j = 1;
        j < limit;
        j++) if (TriangleNumber % j == 0) NbDivisors+=2;
    if (NbDivisors > MaxDivisors) {
      MaxDivisors = NbDivisors;
      if (DEBUG_MODE) print("Nb divisors found: $MaxDivisors (from triangle number $TriangleNumber)");
    }
    if (NbDivisors >= NB_DIVISORS) return TriangleNumber;
  }
}

void main() {
  assert(Solve(5) == 28);

  DateTime creationTime = new DateTime.now();
  int res = Solve(NB_DIVISORS);
  print('First triangle number with at least $NB_DIVISORS divisors: $res');
  DateTime finishTime = new DateTime.now();
  print('Elapsed time: ${finishTime.difference(creationTime)}');
}
