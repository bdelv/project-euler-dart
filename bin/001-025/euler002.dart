/*
Even Fibonacci numbers
https://projecteuler.net/problem=2

Each new term in the Fibonacci sequence is generated by adding the previous two terms.
By starting with 1 and 2, the first 10 terms will be:
1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...
By considering the terms in the Fibonacci sequence whose values do not exceed four million,
find the sum of the even-valued terms.
*/
import 'dart:core';

const problemNumber = 2;
bool debugMode = false;

int solve(int maxFibonacciNumber) {
  if (debugMode) {
    print('Sum of the even Fibonacci numbers <=$maxFibonacciNumber');
  }

  int fibonacci = 2;
  int prev1 = 1;
  int prev2 = 0;
  int sum = 2;

  while (true) {
    prev2 = prev1;
    prev1 = fibonacci;
    fibonacci = prev1 + prev2;
    if (debugMode) print(fibonacci);
    if (fibonacci > maxFibonacciNumber) break;
    if (fibonacci.isEven) sum += fibonacci;
  }
  if (debugMode) print('sum=$sum');
  return sum;
}

void main() {
  assert(debugMode = true);
  assert(solve(100) == 44);

  DateTime startTime = DateTime.now();
  print(
      "Problem ${problemNumber.toString().padLeft(3, '0')}: Solution=${solve(4000000)} (in ${DateTime.now().difference(startTime).inMilliseconds}ms)");
}
